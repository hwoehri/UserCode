(1) runMC.C
    steering macro that projects from the RooDataSet containing the generated 
    variables into histograms containing the 1D and 2D distributions of the 
    polarization related variables (cosTheta and phi), which will be the input
    to the macro calculating the Acc*Eff maps from MC. The actual booking and 
    filling of the histograms is done in PolMC.h/C.
    --> cuts implemented in PolMC.C should always be in sync with the
    one in PolData.C
    
(2) runData.C
    steering macro that projects from the RooDataSet into histograms
    containing the 1D and 2D distributions of the polarization related 
    variables (cosTheta and phi). This macro can be run on real data
    as well as on MC. To add the reconstructed histograms for the acceptance
    evaluation to the output file from the previous step ("runMC.C") run
    "runData.C" with the option 
    Bool_t newOutputFile = kFALSE
    Otherwise to store them in a new output file use
    Bool_t newOutputFile = kTRUE
    The actual booking and filling of the histograms is done in PolData.h/C.
    --> cuts implemented in PolData.C should always be in sync with the
    one in PolMC.C

    The option "writeOutEvents" allows to store in an ascii file the RunNumber,
    LS and EventNumber of all opposite sign dimuons that we are considering 
    for the physics data analysis. The output filename is "jPsiCandidates.txt".

(3a) getAcceptance.C
    calculates the product of geometrical acceptance with all efficiencies
    from MC, simply as Acc = RECO / GEN. This is done for the 1D and 2D
    histograms stored in the output file from the previous two steps
    The acceptance maps used for the RooFits of the polarization analyses
    are 2D histos (phi vs cosTheta) for each rapidity and pT bin and are 
    called "hAcc2D_Onia_CS_pT1_rap1" and "hAcc2D_Onia_HX_pT1_rap1" etc.
    These are stored in a file called "accHistos_HLT_Mu0Track0Jpsi.root"
    (or similar)

    --> the many output plots can be processed by
    cd ../latex
    pdflatex acceptance.tex

    Given that the generation suffers from single muon kinematical cuts,
    and the cosTheta and phi distributions were generated flat, the acceptance
    curves are currently just given by the distribution of reconstructed
    events.
(3b) getNPAcceptance.C
    In an analogous fashion the acceptance maps for the NP J/psi's are 
    prepared. It requests, however, four input files, corresponding to the
    B0, B+-, Bs and Lambda_b generations. These are added with weights, given
    by the individual integrated luminosities. By default these weights are:
    Double_t weights[kNbSpecies] = {10./(44.46*0.894), 10./(36.7*0.898), 
                                    10./(33.5*0.9), 10./(156.63*0.899)};

(*) plotMass.C
    macro that reads the output of "runData.C", plots the mass distribution
    in the pT and rapidity bins, defined in ../interface/commonVar.h
    fits them to extract the S / BG ratio in a 2.5 sigma interval
    (defined in Double_t nSigma = 2.5;) and saves output figures in 
    the directory "Figures/"

    --> the many plots can be processed by
    cd ../latex
    pdflatex dimuMass_Jpsi_data.tex

(*) checkAccCorrectedSpectra.C
    plots the spectra (phi and cosTheta for the time being) before and after 
    acceptance correction (1D as well as 2D)

(*) plotDeltaPhi.C
    plots the delta phi distribution (phi(mu+)-phi(mu-)) of the dimuons
    processed as an output of running "runData.C". Input to this macro is
    the usual pol_xxx.root file

    --> the many output plots can be processed by
    cd ../latex
    pdflatex deltaPhiLab.tex
    
(4) fitPolPar.C
    This is a simplified fitting macro that allows to extract the lambda
    parameters from the acceptance corrected data. Simplified, because the
    fits are binned and, more importantly, background and non-prompt components
    are not accounted for. It works well on pure signal MC and for bins in
    data were both, BG and non-prompt components, are negligible.
    The inputs are a root file, obtained as an output from step (2) ("data"),
    and the root file containing the acceptance maps, generated from
    step (3). The fit results are stored in a subdirectory "Results", "Figures"
    and a subdirectory of "Figures", constructed on the basis of the label
    specified as the first input argument:
    "Figures/FitResults1D_*label*"

    If the macro is run with pT = 0 and rap = 0, the lambda parameters for
    all pT and rap bins are extracted and stored in TGraphAsymmErrors,
    available in the "Results" subdirectory. For pT and rap > 0 the particular
    bin under study is fitted alone. In this case it is suggested to
    switch one the option "displayOn" from which control histograms for
    visual inspection can be obtained.
    
    If "normalise" is set to kTRUE, the acceptance maps are normalised to 1
    (useful when the acceptance maps simply contain the number of rec. events)

(5) plotLambdas.C
    once a root file from step (4) is obtained, holding the lambdas of all
    the rapidity and pT bins, this macro simply does the plotting of the
    lambda_theta and lambda_phi graphs versus pT for the three rapidity bins
    some make-up. The user can steer inside the method
    "FinalizeGraphsForPlotting()" which points should be removed.
